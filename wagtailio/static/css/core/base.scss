html,
body {
    font: 300 18px/1.5 $font-primary;
    background: $color-primary-light;
    color: $bodyColor;
}

*, *:before, *:after{
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: $color-secondary-highlight;

    @include transition(
        color $anim-speed-primary linear,
        padding $anim-speed-primary linear,
        background-color $anim-speed-primary linear,
        opacity $anim-speed-primary linear
    );

    &:hover{
        color: $color-primary-highlight;
    }
    &:focus {
        outline-color: $color-primary-highlight;
    }
}

img {
    height: auto; // overwrite inline height added via django templating (possibly a bad assumption to make!)
    vertical-align: top; // render images as we would just expect them to render (without mystical padding bottom)
}

pre {
    font-family: monospace;
    background: $color-primary-dark;
    padding: $grid * 2 $grid * 2 $grid * 3;
    color: $white;
    text-indent: 0;
    display: inline-block;
    font-family: monospace, courier, times, serif;
 }

 .pre-container {
     position: relative;
 }

 .app-header {
     position: absolute;
     top: 0;
     left: 0;
     width: 100%;
     display: block;
     background: #383838;
     height: 20px;
     border-radius: 5px 5px 0 0;

     span {
         width: 10px;
         height: 10px;
         border-radius: 50%;
         background-color: $color-secondary-highlight;
         margin: 5px 5px 0 0;
         display: inline-block;
         float: left;

         &:first-of-type {
             margin-left: 10px;
             background-color: $color-primary-highlight;
         }
     }
 }

 iframe {
     max-width: 100%;
 }


/* ============================================

Other global items

*/

.view-all {
    display: block;

    svg {
        position: relative;
        top: 2px;
        display: inline-block;
        margin-left: 5px;
        width: 15px;
        height: 15px;
        fill: $black;
        transform: rotate(-90deg) translateY(0px);
        transition: transform .2s ease 0s;
    }

    &:hover {

        svg {
            transform: rotate(-90deg) translateY(5px);
        }
    }

    &--light {
        color: $white;

        svg {
            fill: $white;
        }

    }

}

.border-after {

    &:after {
        content: '';
        height: 1px;
        width: 20%;
        background: lighten($borderColorDark, 50%);
        display: block;
        margin: $grid * 3 auto;
    }

}



.mobile-only {
    display: block;

    @include gridle_state( tablet-landscape ){
        display: none;
    }
}
