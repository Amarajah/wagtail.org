name: CI
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  black:
    runs-on: ubuntu-latest
    container: python:3.8-slim-bullseye
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -q black==22.6.0
      - name: black
        run: |
          black . --check
  isort:
    runs-on: ubuntu-latest
    container: python:3.8-slim-bullseye
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -q isort==5.10.1
      - name: isort
        run: |
          isort . --check-only --profile black
  flake8:
    runs-on: ubuntu-latest
    container: python:3.8-slim-bullseye
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -q flake8==4.0.1 flake8-assertive==2.1.0 flake8-blind-except==0.2.1 flake8-comprehensions==3.10.0
      - name: flake8
        run: |
          flake8 .
  djhtml:
    runs-on: ubuntu-latest
    container: python:3.8-slim-bullseye
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -q djhtml==1.5.1
      - name: djhtml
        run: |
          djhtml wagtailio/**/*.html --check
  test_js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/.nvmrc') }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci --no-audit
      - run: npm run lint
      - run: npm run build:prod
  test_python:
    runs-on: ubuntu-latest
    needs: [black, isort, flake8, djhtml]
    env:
      DJANGO_SETTINGS_MODULE: wagtailio.settings.production
      DATABASE_URL: postgres://postgres:postgres@localhost/postgres
      SECRET_KEY: iamnotsosecret
      ALLOWED_HOSTS: localhost
      COMPUTER_VISION_API_KEY: fake
      COMPUTER_VISION_REGION: fake
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgress
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: 'pip'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: System checks
        run: python manage.py check
      - name: Missing migrations
        run: python manage.py makemigrations --check --noinput
      - name: Test
        run: python manage.py test
